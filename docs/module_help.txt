content of the module : 

The OneHotManager class is designed to manage one-hot encoding operations on DataFrame columns.


Initialization:

from one_hot_module import OneHotManager
import pandas as pd

# Initialize OneHotManager with a DataFrame
manager = OneHotManager(df: pd.DataFrame, inplace: bool = False)

    df (pd.DataFrame): The DataFrame on which one-hot encoding operations will be performed.
    inplace (bool, optional): Whether to perform operations in-place. Default is False.



Methods
split_column

def split_column(column_name: str, rescale: bool = False):
    """
	Split a column with one-hot encoding. Data needed for the reconstruction is stored in the dictionnary self.categorial_columns_data
	the names of the new columns are made as : 
	"OneHot_" + str(column_title)+"_"+ str(category)
	The categorial column is then deleted to prevent duplicate data and potential conflict.
	

    Args:
        column_name (str): The name of the column to be split.
        rescale (bool, optional): Whether to rescale the resulting one-hot encoded columns. Default is `False`.
    """

    column_name (str): The name of the column to be split.
    rescale (bool, optional): Whether to rescale the resulting one-hot encoded columns. Default is False.



split_multiple_columns
def split_multiple_columns(self, column_list, rescale = False) :
	"""
	calls split_column for each column in the list.
	
	Args : 
	column_list (list of str) : a list of the names of the columns to split.
	the other arguments are the same as split_column()
	"""
	
	
reconstruct_column
def reconstruct_column(self, column_title) :
	"""
	Reconstructs a column that was split by this object. Data needed for the reconstruction is taken from the dictionnary self.categorial_columns_data (split_column fills it)
	If rescaled option was False during the split : 
	For each line, the category selected is the one with the highest value (if data didn't change since the split, the column of the original category should have a 1 , and the other 0 )
	If rescaled was true, the scaling is reversed before selecting the highest value
	The OneHot columns are then deleted to prevent duplicate data and potential conflict.	
	

	Args:
	column_name (str): The name of the column (before the split, which is also part of the new columns names).
	"""

 
reconstruct_multiple_columns    	
def reconstruct_multiple_columns(self, column_list) : 
	"""
	calls reconstruct_column for each column in the list
	
	Args:
	column_list (list of str): The name of the column (before the split, which is also part of the new columns names).
	"""

    
reconstruct_all_columns
def reconstruct_all_columns(self, verbose = False) : 
   	"""
	calls reconstruct_column for each column  that is currently split 
	(the status split or merged of each column is stored in self.categorial_columns_data, and updated by split_column and reconstruct_column)
	
	Args:
	verbose (bool) : default is false. Will print the name of the columns documented in categorial_columns_data , and tell for each of them if it was split (and therefore are reconstructed by this function)
	"""









Example code is included in the module (after the class declaration). Execute the module directly to test it.







